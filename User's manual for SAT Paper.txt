User's manual for SAT Paper


Horia-Ionut Bociat


        This file is made as a helpful guide for anyone that is analyzing the paper named “Experimental SAT Analysis. 
Resolution, DP and DPLL Compared”. 


        Firstly, let's enumerate the components of the machine on which I did my experiments. 
I used a windows machine, visual studio code as an Integrated Development Environment, python 3.13.3
and some python tools: pip 3.13, matplotlib.pyplot, tracemalloc, time, seaborn, glob, os.


        The components of my machine are:
Device Name        DESKTOP-CGG2FIE
Processor        Intel(R) Core(TM) i5-7400 CPU @ 3.00GHz   3.00 GHz
Installed RAM        24.0 GB
Storage        932 GB SSD Samsung SSD 870 EVO 1TB, 1.75 TB SSD Seagate ZA1920CV10002
Graphics Card        Radeon RX 580 Series (8 GB)
System Type        64-bit operating system, x64-based processor


        I exclusively used the python tools to measure the timings and the memory allocated, I also made sure 
to automate all of the benchmarking so the scripts are already written in the code of each algorithm 
(eg. run_benchmark(), generate_formula(), benchmark(), generate_formula_param(), generate_large_formula() ).


        These scripts made my work easier, they randomly generated formulas, benchmarked the algorithm and even 
showed a graph based on the cpu timings and memory allocated. As a consequence, these scripts provide the paper 
with objectivity and eliminate the human-error.


        Finally, to be able to remake my exact experiments, you would have to use the same IDE, then load the 
algorithm in it and change the variables in some functions (eg. num_base_vars = 100, clause_sizes = list(range(10, 1001, 20) )
to the numbers I specified in the paper and you will get my results.
